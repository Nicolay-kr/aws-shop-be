// this file was generated by serverless-auto-swagger
            module.exports = {
  "swagger": "2.0",
  "info": {
    "title": "Product Service API",
    "version": "1"
  },
  "paths": {
    "/products/{id}": {
      "get": {
        "summary": "getProductsById",
        "description": "",
        "operationId": "getProductsById.get.products/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful API response from API",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Failed API response",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "getProductsList",
        "description": "",
        "operationId": "getProductsList.get./products",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful API response",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      },
      "post": {
        "summary": "createProduct",
        "description": "",
        "operationId": "createProduct.post.products",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Body required in the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWithCount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The product was created",
            "schema": {
              "$ref": "#/definitions/ProductId"
            }
          },
          "400": {
            "description": "The product was not created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "422": {
            "description": "Body is unprocessable",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "properties": {
        "id": {
          "title": "Product.id",
          "type": "string"
        },
        "title": {
          "title": "Product.title",
          "type": "string"
        },
        "description": {
          "title": "Product.description",
          "type": "string"
        },
        "price": {
          "title": "Product.price",
          "type": "number"
        }
      },
      "required": [
        "id",
        "title",
        "price"
      ],
      "additionalProperties": false,
      "title": "Product",
      "type": "object"
    },
    "Products": {
      "items": {
        "$ref": "#/definitions/Product",
        "title": "Products.[]"
      },
      "title": "Products.[]",
      "type": "array"
    },
    "ServerError": {
      "properties": {
        "message": {
          "title": "ServerError.message",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "additionalProperties": false,
      "title": "ServerError",
      "type": "object"
    },
    "ProductWithCount": {
      "allOf": [
        {
          "$ref": "#/definitions/Product"
        },
        {
          "properties": {
            "count": {
              "title": "count",
              "type": "string"
            }
          },
          "required": [
            "count"
          ],
          "additionalProperties": false,
          "type": "object"
        }
      ],
      "title": "ProductWithCount"
    },
    "ProductId": {
      "properties": {
        "id": {
          "title": "ProductId.id",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false,
      "title": "ProductId",
      "type": "object"
    }
  },
  "securityDefinitions": {},
  "basePath": "/dev",
  "schemes": [
    "http",
    "https",
    "ws",
    "wss"
  ]
};